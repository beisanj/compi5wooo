declare void @exit(i32)
declare i32 @printf(i8*, ...)
declare i32 @scanf(i8*, ...)
@.int_specifier_scan = constant [3 x i8] c"%d\00"
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define i32 @readi(i32) {
    %ret_val = alloca i32
    %spec_ptr = getelementptr [3 x i8], [3 x i8]* @.int_specifier_scan, i32 0, i32 0
    call i32 (i8*, ...) @scanf(i8* %spec_ptr, i32* %ret_val)
    %val = load i32, i32* %ret_val
    ret i32 %val
}
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.MessageDivError = constant [23 x i8] c"Error division by zero\00"
define void @checkIfDivisionBy0(i32) {
%t2= icmp eq i32 %0,0
br i1 %t2,label %zeroLabel,label %notZero
zeroLabel:
%t3= getelementptr [23 x i8], [23 x i8]* @.MessageDivError, i32 0, i32 0
call void @print(i8* %t3)
call void @exit(i32 0)
ret void
notZero:
ret void
}
define i32 @main() {
%t4= add i32 50,0
%array = alloca i32, i32 %t4
br label %label_2
label_2:
%t5 = add i32 0, 1
%t6 = getelementptr i32, i32* %array, i32 0
store i32 %t5, i32* %t6
br label %label_5
label_5:
br label %label_7
label_6:
br label %label_8
label_7:
br label %label_8
label_8:
%t7 = phi i1 [ 1, %label_6], [ 0, %label_7]
%t8 = getelementptr i32, i32* %array, i32 1
%t9 = zext i1 %t7 to i32
store i32 %t9, i32* %t8
br label %label_9
label_9:
br label %label_11
label_10:
br label %label_12
label_11:
br label %label_12
label_12:
%t10 = phi i1 [ 1, %label_10], [ 0, %label_11]
%t11 = getelementptr i32, i32* %array, i32 2
%t12 = zext i1 %t10 to i32
store i32 %t12, i32* %t11
br label %label_13
label_13:
%t13 = getelementptr i32, i32* %array, i32 1
%t14 = load i32, i32* %t13
%t15 = trunc i32 %t14 to i1
br label %label_14
label_14:
%t16 = getelementptr i32, i32* %array, i32 2
%t17 = load i32, i32* %t16
%t18 = trunc i32 %t17 to i1
label_15:
br label %label_19
label_17:
br label %label_19
label_16:
br label %label_18
label_18:
br label %label_20
label_19:
br label %label_20
label_20:
%t19 = phi i1 [ 1, %label_18], [ 0, %label_19]
%t20 = getelementptr i32, i32* %array, i32 3
%t21 = zext i1 %t19 to i32
store i32 %t21, i32* %t20
ret i32 0
}
